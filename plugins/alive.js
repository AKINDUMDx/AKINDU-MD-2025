const { cmd } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');
const config = require('../config');

// Date & greeting based on Sri Lanka timezone
const getGreeting = () => {
    const now = new Date().toLocaleString("en-US", { timeZone: "Asia/Colombo" });
    const hour = new Date(now).getHours();

    if (hour < 12) return "Good Morning üåÖ";
    if (hour < 17) return "Good Afternoon ‚òÄÔ∏è";
    if (hour < 20) return "Good Evening üåá";
    return "Good Night üåô";
};

const getSriLankaTime = () => {
    const now = new Date().toLocaleString("en-US", { timeZone: "Asia/Colombo" });
    const date = new Date(now);
    const pad = (n) => n.toString().padStart(2, '0');

    const day = pad(date.getDate());
    const month = pad(date.getMonth() + 1);
    const year = date.getFullYear();
    const hours = pad(date.getHours());
    const minutes = pad(date.getMinutes());
    const seconds = pad(date.getSeconds());

    return `${day}-${month}-${year} | ${hours}:${minutes}:${seconds}`;
};

cmd({
    pattern: "alive",
    alias: ["status", "online", "a"],
    desc: "Check bot is alive or not",
    category: "main",
    react: "‚ö°",
    filename: __filename
},
async (conn, mek, m, { from, sender, reply }) => {
    try {
        const greeting = getGreeting();
        const sriLankaTime = getSriLankaTime();

        const status = `
‚ï≠‚îÄ‚îÄ‚îÄ„Äî *ü§ñ ${config.BOT_NAME} STATUS* „Äï‚îÄ‚îÄ‚îÄ‚óâ
‚îÇ‚ú® *${greeting}*
‚îÇüìÖ *Date & Time:* ${sriLankaTime}
‚îÇ
‚îÇüß† *Owner:* ${config.OWNER_NAME}
‚îÇ‚ö° *Version:* 4.0.0
‚îÇüìù *Prefix:* [${config.PREFIX}]
‚îÇüì≥ *Mode:* [${config.MODE}]
‚îÇüíæ *RAM:* ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${(os.totalmem() / 1024 / 1024).toFixed(2)}MB
‚îÇüñ•Ô∏è *Host:* ${os.hostname()}
‚îÇ‚åõ *Uptime:* ${runtime(process.uptime())}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óâ
> ${config.DESCRIPTION}`;

        await conn.sendMessage(from, {
            image: { url: config.MENU_IMAGE_URL },
            caption: status,
            contextInfo: {
                mentionedJid: [m.sender]
            }
        }, { quoted: mek });

    } catch (e) {
        console.error("Alive Error:", e);
        reply(`‚ùå An error occurred: ${e.message}`);
    }
});
